import enum
from typing import Any, Optional

class BucketType(enum.Enum):
    default: int = ...
    user: int = ...
    guild: int = ...
    channel: int = ...

class Cooldown:
    rate: Any = ...
    per: Any = ...
    type: Any = ...
    def __init__(self, rate: Any, per: Any, type: Any) -> None: ...
    def get_tokens(self, current: Optional[Any] = ...): ...
    def update_rate_limit(self): ...
    def reset(self) -> None: ...
    def copy(self): ...

class CooldownMapping:
    def __init__(self, original: Any) -> None: ...
    @property
    def valid(self): ...
    @classmethod
    def from_cooldown(cls, rate: Any, per: Any, type: Any): ...
    def get_bucket(self, message: Any): ...
