from typing import Any, Optional, Union, Dict, AsyncIterator
from . import abc
from .emoji import Emoji, PartialEmoji
from .member import Member
from .message import Message
from .user import User

_Emoji = Union[str, Emoji, PartialEmoji]

class Reaction:
    message: Message = ...
    emoji: _Emoji = ...
    count: int = ...
    me: bool = ...
    def __init__(self, message: Message, data: Dict[str, Any], *, emoji: Optional[_Emoji] = ...) -> None: ...
    @property
    def custom_emoji(self) -> bool: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __hash__(self) -> int: ...
    def users(self, limit: Optional[int] = ..., after: Optional[abc.Snowflake] = ...) -> AsyncIterator[Union[User, Member]]: ...
