# Stubs for discord.permissions (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class Permissions:
    value: Any = ...
    def __init__(self, permissions: int = ...) -> None: ...
    def __eq__(self, other: Any): ...
    def __ne__(self, other: Any): ...
    def __hash__(self): ...
    def __iter__(self): ...
    def is_subset(self, other: Any): ...
    def is_superset(self, other: Any): ...
    def is_strict_subset(self, other: Any): ...
    def is_strict_superset(self, other: Any): ...
    __le__: Any = ...
    __ge__: Any = ...
    __lt__: Any = ...
    __gt__: Any = ...
    @classmethod
    def none(cls): ...
    @classmethod
    def all(cls): ...
    @classmethod
    def all_channel(cls): ...
    @classmethod
    def general(cls): ...
    @classmethod
    def text(cls): ...
    @classmethod
    def voice(cls): ...
    def update(self, **kwargs: Any) -> None: ...
    def handle_overwrite(self, allow: Any, deny: Any) -> None: ...
    @property
    def create_instant_invite(self): ...
    @create_instant_invite.setter
    def create_instant_invite(self, value: Any) -> None: ...
    @property
    def kick_members(self): ...
    @kick_members.setter
    def kick_members(self, value: Any) -> None: ...
    @property
    def ban_members(self): ...
    @ban_members.setter
    def ban_members(self, value: Any) -> None: ...
    @property
    def administrator(self): ...
    @administrator.setter
    def administrator(self, value: Any) -> None: ...
    @property
    def manage_channels(self): ...
    @manage_channels.setter
    def manage_channels(self, value: Any) -> None: ...
    @property
    def manage_guild(self): ...
    @manage_guild.setter
    def manage_guild(self, value: Any) -> None: ...
    @property
    def add_reactions(self): ...
    @add_reactions.setter
    def add_reactions(self, value: Any) -> None: ...
    @property
    def view_audit_log(self): ...
    @view_audit_log.setter
    def view_audit_log(self, value: Any) -> None: ...
    @property
    def read_messages(self): ...
    @read_messages.setter
    def read_messages(self, value: Any) -> None: ...
    @property
    def send_messages(self): ...
    @send_messages.setter
    def send_messages(self, value: Any) -> None: ...
    @property
    def send_tts_messages(self): ...
    @send_tts_messages.setter
    def send_tts_messages(self, value: Any) -> None: ...
    @property
    def manage_messages(self): ...
    @manage_messages.setter
    def manage_messages(self, value: Any) -> None: ...
    @property
    def embed_links(self): ...
    @embed_links.setter
    def embed_links(self, value: Any) -> None: ...
    @property
    def attach_files(self): ...
    @attach_files.setter
    def attach_files(self, value: Any) -> None: ...
    @property
    def read_message_history(self): ...
    @read_message_history.setter
    def read_message_history(self, value: Any) -> None: ...
    @property
    def mention_everyone(self): ...
    @mention_everyone.setter
    def mention_everyone(self, value: Any) -> None: ...
    @property
    def external_emojis(self): ...
    @external_emojis.setter
    def external_emojis(self, value: Any) -> None: ...
    @property
    def connect(self): ...
    @connect.setter
    def connect(self, value: Any) -> None: ...
    @property
    def speak(self): ...
    @speak.setter
    def speak(self, value: Any) -> None: ...
    @property
    def mute_members(self): ...
    @mute_members.setter
    def mute_members(self, value: Any) -> None: ...
    @property
    def deafen_members(self): ...
    @deafen_members.setter
    def deafen_members(self, value: Any) -> None: ...
    @property
    def move_members(self): ...
    @move_members.setter
    def move_members(self, value: Any) -> None: ...
    @property
    def use_voice_activation(self): ...
    @use_voice_activation.setter
    def use_voice_activation(self, value: Any) -> None: ...
    @property
    def change_nickname(self): ...
    @change_nickname.setter
    def change_nickname(self, value: Any) -> None: ...
    @property
    def manage_nicknames(self): ...
    @manage_nicknames.setter
    def manage_nicknames(self, value: Any) -> None: ...
    @property
    def manage_roles(self): ...
    @manage_roles.setter
    def manage_roles(self, value: Any) -> None: ...
    @property
    def manage_webhooks(self): ...
    @manage_webhooks.setter
    def manage_webhooks(self, value: Any) -> None: ...
    @property
    def manage_emojis(self): ...
    @manage_emojis.setter
    def manage_emojis(self, value: Any) -> None: ...

def augment_from_permissions(cls): ...

class PermissionOverwrite:
    def __init__(self, **kwargs: Any) -> None: ...
    def pair(self): ...
    @classmethod
    def from_pair(cls, allow: Any, deny: Any): ...
    def is_empty(self): ...
    def update(self, **kwargs: Any) -> None: ...
    def __iter__(self) -> None: ...
