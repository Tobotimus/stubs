# Stubs for discord.channel (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import discord.abc
from .mixins import Hashable
from typing import Any, Optional

class TextChannel(discord.abc.Messageable, discord.abc.GuildChannel, Hashable):
    id: Any = ...
    def __init__(self, state: Any, guild: Any, data: Any) -> None: ...
    def permissions_for(self, member: Any): ...
    @property
    def members(self): ...
    def is_nsfw(self): ...
    def edit(self, *, reason: Optional[Any] = ..., **options: Any) -> None: ...
    def delete_messages(self, messages: Any): ...
    def purge(self, *, limit: int = ..., check: Optional[Any] = ..., before: Optional[Any] = ..., after: Optional[Any] = ..., around: Optional[Any] = ..., reverse: bool = ..., bulk: bool = ...): ...
    def webhooks(self): ...
    def create_webhook(self, *, name: Optional[Any] = ..., avatar: Optional[Any] = ...): ...

class VoiceChannel(discord.abc.Connectable, discord.abc.GuildChannel, Hashable):
    id: Any = ...
    def __init__(self, state: Any, guild: Any, data: Any) -> None: ...
    @property
    def members(self): ...
    def edit(self, *, reason: Optional[Any] = ..., **options: Any) -> None: ...

class CategoryChannel(discord.abc.GuildChannel, Hashable):
    id: Any = ...
    def __init__(self, state: Any, guild: Any, data: Any) -> None: ...
    def is_nsfw(self): ...
    position: Any = ...
    def edit(self, *, reason: Optional[Any] = ..., **options: Any) -> None: ...
    @property
    def channels(self): ...

class DMChannel(discord.abc.Messageable, Hashable):
    recipient: Any = ...
    me: Any = ...
    id: Any = ...
    def __init__(self, me: Any, state: Any, data: Any) -> None: ...
    @property
    def created_at(self): ...
    def permissions_for(self, user: Optional[Any] = ...): ...

class GroupChannel(discord.abc.Messageable, Hashable):
    id: Any = ...
    me: Any = ...
    def __init__(self, me: Any, state: Any, data: Any) -> None: ...
    @property
    def icon_url(self): ...
    @property
    def created_at(self): ...
    def permissions_for(self, user: Any): ...
    def add_recipients(self, *recipients: Any) -> None: ...
    def remove_recipients(self, *recipients: Any) -> None: ...
    def edit(self, **fields: Any) -> None: ...
    def leave(self) -> None: ...

# Names in __all__ with no definition:
#   _channel_factory
