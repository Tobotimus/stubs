# Stubs for discord.client (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .errors import *
from .gateway import *
from .activity import _ActivityTag, create_activity
from .backoff import ExponentialBackoff
from .enums import Status, VoiceRegion
from .guild import Guild
from .http import HTTPClient
from .invite import Invite
from .object import Object
from .state import ConnectionState
from .user import Profile, User
from .voice_client import VoiceClient
from .webhook import Webhook
from collections import namedtuple
from typing import Any, Optional

PY35: Any
log: Any

AppInfo = namedtuple('AppInfo', 'id name description icon owner')

def app_info_icon_url(self): ...

class Client:
    ws: Any = ...
    loop: Any = ...
    shard_id: Any = ...
    shard_count: Any = ...
    http: Any = ...
    def __init__(self, *, loop: Optional[Any] = ..., **options: Any) -> None: ...
    def handle_ready(self) -> None: ...
    @property
    def latency(self): ...
    @property
    def user(self): ...
    @property
    def guilds(self): ...
    @property
    def emojis(self): ...
    @property
    def private_channels(self): ...
    @property
    def voice_clients(self): ...
    def is_ready(self): ...
    def dispatch(self, event: Any, *args: Any, **kwargs: Any) -> None: ...
    def on_error(self, event_method: Any, *args: Any, **kwargs: Any) -> None: ...
    def request_offline_members(self, *guilds: Any) -> None: ...
    def login(self, token: Any, *, bot: bool = ...) -> None: ...
    def logout(self) -> None: ...
    def connect(self, *, reconnect: bool = ...): ...
    def close(self): ...
    def clear(self) -> None: ...
    def start(self, *args: Any, **kwargs: Any) -> None: ...
    def run(self, *args: Any, **kwargs: Any): ...
    def is_closed(self): ...
    @property
    def activity(self): ...
    @activity.setter
    def activity(self, value: Any) -> None: ...
    @property
    def users(self): ...
    def get_channel(self, id: Any): ...
    def get_guild(self, id: Any): ...
    def get_user(self, id: Any): ...
    def get_emoji(self, id: Any): ...
    def get_all_channels(self) -> None: ...
    def get_all_members(self) -> None: ...
    def wait_until_ready(self) -> None: ...
    def wait_for(self, event: Any, *, check: Optional[Any] = ..., timeout: Optional[Any] = ...): ...
    def event(self, coro: Any): ...
    def async_event(self, coro: Any): ...
    def change_presence(self, *, activity: Optional[Any] = ..., status: Optional[Any] = ..., afk: bool = ...) -> None: ...
    def create_guild(self, name: Any, region: Optional[Any] = ..., icon: Optional[Any] = ...): ...
    def get_invite(self, url: Any): ...
    def delete_invite(self, invite: Any) -> None: ...
    def application_info(self): ...
    def get_user_info(self, user_id: Any): ...
    def get_user_profile(self, user_id: Any): ...
    def get_webhook_info(self, webhook_id: Any): ...
